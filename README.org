#+TITLE: BBOP-JS README
#+Options: num:nil
#+STARTUP: odd
#+Style: <style> h1,h2,h3 {font-family: arial, helvetica, sans-serif} </style>

* Overview

  BBOP JS is cross-platform client (web browsers) and server (NodeJS,
  Rhino, etc.) JavaScript library. Spun-off from its roots in the Gene
  Ontology Consortium's AmiGO software,

  - A rich interface to Solr servers
  - Rich (mathematical/set) graph and tree facilities
  - Scripting functionality and multiple REPLs
  - A set of useful utility functions
  - A light templating/replacement facility
  - A generic logger facility
  - A light and easy-to-use testing framework
  - HTML generation and widget sets
  - Much much more...
  
  BBOP JS is cleanly coded with namespacing, well tested, and
  documented. We're still putting this all together, so please be
  patient with the current organization...

* Getting the library
** Remote (CDN)

   Currently, the easiest way to use BBOP-JS is just to download it
   off of the CDN and use it locally.

   For the latest, try:

   - http://cdn.berkeleybop.org/jsapi/bbop.js
   - http://cdn.berkeleybop.org/jsapi/bbop.min.js

   Or, for a specific version, try:

   - http://cdn.berkeleybop.org/jsapi/bbop_0.9.js
   - http://cdn.berkeleybop.org/jsapi/bbop_0.9.min.js

** Local (building)

   Building, tests, documentation, and releases are all handled with
   make.

*** Dependencies

    These are the required packages on Ubuntu 12.04 LTS Desktop.
    
- git
- rhino 
- make
- rsync
- yui-compressor
- naturaldocs

*** Getting the code

    : mkdir -p ~/local/src/git && cd ~/local/src/git
    : git clone git://github.com/kltm/bbop-js.git
    : cd bbop-js
  
*** Building (the Makefile)

   Building is handled with the Makefile. Built files should be
   deposited in staging/. An overview of the different make commands
   follows, but most useful one for developer is probably "make test",
   which will first bundle the files and deposit them in staging/
   before testing them.

   : make test

**** make test

    This depends on "bundle".

    Run all of the defined tests. The tests themselves run out of the
    bundle in the staging/ directory.

**** make pass

    Basically, just give the exit code results of "make test". If
    something goes wrong, you'll have to run "make test" to see
    exactly what it was.

**** make docs

    Create the documentation and put it in the docs/ directory.

**** make bundle

    Create the BBOP-JS JavaScript libraries (standard and minified)
    and put them into the staging/ directory.

**** make release

    This depends on "docs" and "bundle".

    This is a developer-only command for uploading the current release
    to the CDN--without credentials it is useless, but it may be of
    interest to people who want to do something similar.

* Using the library
** API Documentation
   The alpha API documentation can be current found at:
   http://api.berkeleybop.org/golr/docs/
** Demos
   TODO
* Status

  TODO: Get the link for the Jenkins builds.

* TODO

  - clean
    graph (where the remaining good new stuff is), newick_tree
  - ignorable
    _benchmark, _data
  - see (currently private) working document

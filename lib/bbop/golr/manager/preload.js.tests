////
//// Some unit testing for package preload.js
////
//// Usage:
////    Command line: "rhino -f preload.js.tests"
////    Interactive: "rhino -f preload.js.tests -f -"
////

// Load testing.
load('../../test.js');
var mr_t = new bbop.test();

// Correct environment.
load('../../core.js');
load('../../logger.js');

// Get some test data as well.
// This defines "bbop.amigo.golr_meta".
load('../../../../_data/golr.js');
load('../conf.js');
load('../response.js');

load('../../registry.js');
load('../manager.js');
load('preload.js');

///
/// Start unit testing.
///

// check std
(function(){

     // Setup.
     var gconf = new bbop.golr.conf(amigo.data.golr);
     var go = new bbop.golr.manager.preload('http://golr.berkeleybop.org/',
					    gconf);

     mr_t.is_same_url(go.update('search'),
      		      ['http://golr.berkeleybop.org/select?defType=edismax',
		       'qt=standard',
		       'indent=on',
		       'wt=json',
		       'rows=10',
		       'start=0',
		       'fl=*,score',
		       'facet=true',
		       'facet.mincount=1',
		       'facet.sort=count',
		       'json.nl=arrarr',
     		       'facet.limit=25',
		       'q=*:*',
		       'packet=1',
		       'callback_type=search'].join('&'),
      		      "page on update");
     mr_t.is_same_url(go.update('search'),
      		      ['http://golr.berkeleybop.org/select?defType=edismax',
		       'qt=standard',
		       'indent=on',
		       'wt=json',
		       'rows=10',
		       'start=0',
		       'fl=*,score',
		       'facet=true',
		       'facet.mincount=1',
		       'facet.sort=count',
		       'json.nl=arrarr',
     		       'facet.limit=25',
		       'q=*:*',
		       'packet=2',
		       'callback_type=search'].join('&'),
      		      "page increment on update");
})();

// check overrride
//(function(){

     var data = {
	 "responseHeader":{
	     "status":0,
	     "QTime":25,
	     "params":{
		 "facet":"true",
		 "facet.mincount":"1",
		 "indent":"on",
		 "facet.limit":"25",
		 "qf":["annotation_class^2",
		       "family_tag_label_searchable^1"],
		 "hl.simple.pre":"<em class=\"hilite\">",
		 "json.nl":"arrarr",
		 "wt":"json",
		 "hl":"true",
		 "rows":"10",
		 "defType":"edismax",
		 "fl":"*,score",
		 "facet.sort":"count",
		 "start":"0",
		 "q":"neuro*",
		 "facet.field":["source",
				"annotation_extension_class_closure_label"],
		 "qt":"standard",
		 "fq":["document_category:\"annotation\"",
		       "source:\"MGI\""]}},
	 "response":{"numFound":28,"start":0,"maxScore":1.0,"docs":[]}
     };
     
     // Setup.
     var gconf = new bbop.golr.conf(amigo.data.golr);
     var go = new bbop.golr.manager.preload('http://golr.berkeleybop.org/',
					    gconf);
     
     var a = 'foo';
     function replace(in_thing){
	 a = in_thing;
     }
     go.register('search', 'do', replace);
     
     mr_t.is_same_atom(a, 'foo', "not updated"),
     go.load(data);
     go.search();
     //go.update('search');
     mr_t.is_same_atom(bbop.core.what_is(a),
		       'bbop.golr.response',
		       "updated to 2");
     
// })();

///
/// End unit testing.
///

// Final report.
mr_t.report();

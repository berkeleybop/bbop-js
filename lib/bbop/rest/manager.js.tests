////
//// Some unit testing for package manager.js
////

// Correct environment, ready testing.
var bbop = require('bbop').bbop;
var mr_t = new bbop.test();

///
/// Start unit testing.
///

// bbop.rest.manager + bbop.rest.response
//(function(){

     // 
     var str = '';
     var m = new bbop.rest.manager(bbop.rest.response);
     m.register('success', 'id',
		function(resp, man){
		    str += resp.raw();
		});
     m.resource('foo');
     m.action();
     mr_t.is_same_atom(str, 'foo', 'simple: round trip: foo');
     m.action();
     mr_t.is_same_atom(str, 'foofoo', 'simple: another round trip: foofoo');
     m.action('bar');
     mr_t.is_same_atom(str, 'foofoobar', 'simple: final trip: foofoobar');

     //
     m.payload({'a': 'b', 'c': 'd'});
     m.action('bar');
     mr_t.is_same_atom(str, 'foofoobarbar?a=b&c=d', 'plus payload');

//})();

// bbop.rest.manager + bbop.rest.response.json
(function(){

    var j1 = '{"foo": {"bar": 1}}';
    var j2 = '{"foo": {"bar": 2}}';

     // 
     var total = 0;
     var m = new bbop.rest.manager(bbop.rest.response.json);
     m.register('success', 'id',
		function(resp, man){
		    total += resp.raw()['foo']['bar'];
		});
     m.resource(j1);
     m.action();
     mr_t.is_same_atom(total, 1, 'json round trip: 1');
     m.action();
     mr_t.is_same_atom(total, 2, 'json another trip: 2');
     m.action(j2);
     mr_t.is_same_atom(total, 4, 'json another trip: 4');

})();

///
/// End unit testing.
///

// Final report.
mr_t.report();
